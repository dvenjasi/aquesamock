{"version":3,"sources":["webpack:///src/assets/js/jsutil.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,gCAAgC;AACtD;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,kBAAkB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,6CAA6C;AAC1G,6DAA6D,0CAA0C;AACvG,6DAA6D,yCAAyC;AACtG;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA,iCAAiC;AACjC,wDAAwD,8CAA8C;AACtG,6DAA6D,+CAA+C;AAC5G,kEAAkE,kDAAkD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,sCAAsC;AACzE,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA,oDAAoD,+BAA+B;AACnF;AACA;AACA,gDAAgD,wCAAwC;AACxF,iBAAiB,gCAAgC;AACjD;AACA;AACA,sCAAsC,8BAA8B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,oBAAoB,QAAQ,sBAAsB;AAClD;AACA;AACA","file":"scripts.js","sourcesContent":["/*\n * Javascript utilities to call directly.\n*/\n\nconst b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, {type: contentType});\n  return blob;\n}\n\nfunction getType(p) {\n  if (Array.isArray(p)) return 'array';\n  else if (typeof p == 'string') return 'string';\n  else if (p != null && typeof p == 'object') return 'object';\n  else return 'other';\n}\n\nfunction formatNumbers(jobj){\n  if (jobj === null || getType(jobj) != 'object'){\n    return;\n  }\n  Object.keys(jobj).forEach(\n    function(key) {\n      let ty = getType(jobj[key]);\n      if ( ty === 'object'){\n        let myobj = jobj[key];\n        if ( jobj[key].hasOwnProperty('$numberDecimal') )   { jobj[key] = Number(myobj['$numberDecimal']); }\n        else if ( jobj[key].hasOwnProperty('$numberLong') ) { jobj[key] = Number(myobj['$numberLong']); }\n        else if ( jobj[key].hasOwnProperty('$numberInt') )  { jobj[key] = Number(myobj['$numberInt']); }\n        else {\n          formatNumbers(jobj[key]);\n        }\n      }\n      if ( ty === 'array'){\n        for (let i=0; i< jobj[key].length; i++){\n          let element = jobj[key][i];\n          if (element === null) {continue;}\n          if ( element.hasOwnProperty('$numberInt') )  { jobj[key][i] = Number(element['$numberInt']); }\n          else if ( element.hasOwnProperty('$numberLong') ) { jobj[key][i] = Number(element['$numberLong']); }\n          else if ( element.hasOwnProperty('$numberDecimal') )   { jobj[key][i] = Number(element['$numberDecimal']); }\n        }\n      }\n      ty = getType(jobj[key]);\n      if ( ty === 'array'){\n        jobj[key].forEach(element => {\n          formatNumbers(element);\n        });\n      }\n    }\n  );\n}\n\nfunction trimTimeInObj(jobj,_key){\n  // console.log(\"trim time called\");\n  if ( jobj.hasOwnProperty(_key) ){ jobj[_key] = jobj[_key].substr(0,10); return;}\n  if ( getType(jobj) != 'object' ){ return; }\n  Object.keys(jobj).forEach(\n    function(key) {\n      let ty = getType(jobj[key]);\n      if ( ty === 'string'){\n        // console.log(\"string type: \", key);\n        if ( key == _key ) { jobj[key] = jobj[key].substring(0,10); }\n      }\n      if ( ty === 'object'){\n        Object.keys(jobj[key]).forEach( element => { trimTimeInObj(element, _key);} );\n        // let myobj = jobj[key];\n        // // console.log(myobj);\n        // if ( myobj.hasOwnProperty(_key) )   { myobj[_key] = myobj[_key].substr(0,10); }\n        // else {trimTimeInObj( jobj[key], _key); }\n      }\n      if ( ty === 'array'){\n        jobj[key].forEach(element => {trimTimeInObj(element, _key);});\n      }\n    }\n  )\n  return jobj;\n}\n\nfunction dates2Strings(jobj){\n  // console.log(\"Date2String Called: \", jobj);\n  if (getType(jobj) != 'object'){\n    return;\n  }\n  Object.keys(jobj).forEach(\n    function(key) {\n      // let ob = jobj[key];\n      // console.log(\"Key:\", key, \"Object :\", ob);\n      let ty = getType(jobj[key]);\n      if ( ty === 'object'){\n        dates2Strings(jobj[key]);\n      }\n      if ( ty === 'array'){\n        jobj[key].forEach(element => {\n          dates2Strings(element);\n        });\n      }\n      if ('$date' === key){\n        let dt = jobj[key];//'unknown'\n        if ( 'object' === getType(jobj[key]) ){\n          let njobj = jobj[key];\n          dt = new Date(Number(njobj['$numberLong'])).toISOString();\n        }\n        jobj[key] = dt;\n      }\n    }\n  );\n  // if (jobj.hasOwnProperty('$date')){\n  //   let dt = jobj['$date'];\n  //   console.log(\"Date: \", dt);\n  //   jboj = dt;\n  // } 2022-03-08T11:44:02.303Z\n}\n\nfunction remove$Dates(jobj){\n  if (getType(jobj) != 'object'){\n    return;\n  }\n  Object.keys(jobj).forEach(\n    function(key) {\n      let ty = getType(jobj[key]);\n      if ( ty === 'object'){\n        ob = jobj[key];\n        if (ob.hasOwnProperty('$date')){\n          let dt = ob['$date'];\n          dt = dt.substring(0,19);\n          jobj[key] = dt;\n\n        }\n        else {\n          remove$Dates(jobj[key]);\n        }\n      }\n      if ( ty === 'array'){\n        jobj[key].forEach(element => {\n          remove$Dates(element);\n        });\n      }\n    }\n  );\n}\n\nfunction getValue(jobj, key){\n  let _key = key.trim();\n  let val='';\n  Object.keys(jobj).every(\n    function(k) {\n      if (k == _key){\n        // console.log(\"Found: \", k, jobj[k]);\n        val = jobj[k];\n        return false;\n      }\n      return true;\n    }\n  );\n  return val;\n}\n\nfunction isLeapYear(year){\n  return (year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0);\n}\n\nfunction doy2Date(yyddd){\n  let yyyy = Number(yyddd.substr(0,2))+2000;\n  let ddd = Number(yyddd.substr(2,3));\n  var nday = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n  nday[1] = isLeapYear(yyyy) ? 29 : 28;\n  let n=0;\n  let mm=0;\n  let dd=0;\n  for (var i = 0; i < 12; i++) {\n    n += nday[i];\n    if ( ddd <= n ){ mm = i; dd = nday[i]-(n-ddd); break;}\n  }\n  return new Date(yyyy,mm,dd);\n}\n"],"sourceRoot":""}